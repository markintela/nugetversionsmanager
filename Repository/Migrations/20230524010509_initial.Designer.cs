// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230524010509_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Model.Domain.CardJira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeveloperId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EpicId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpicStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GitBranch")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasDataContractChanges")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JiraNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SprintId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("EpicId");

                    b.HasIndex("SprintId");

                    b.ToTable("CardJira");
                });

            modelBuilder.Entity("Model.Domain.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Developer");
                });

            modelBuilder.Entity("Model.Domain.EpicFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EpicFeature");
                });

            modelBuilder.Entity("Model.Domain.ManagerVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CardJiraId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Major")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Patch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreRelease")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SolutionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardJiraId");

                    b.HasIndex("SolutionId");

                    b.ToTable("ManagerVersion");
                });

            modelBuilder.Entity("Model.Domain.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubModule")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("Model.Sprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sprint");
                });

            modelBuilder.Entity("Model.Domain.CardJira", b =>
                {
                    b.HasOne("Model.Domain.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId");

                    b.HasOne("Model.Domain.EpicFeature", "Epic")
                        .WithMany()
                        .HasForeignKey("EpicId");

                    b.HasOne("Model.Sprint", "Sprint")
                        .WithMany()
                        .HasForeignKey("SprintId");

                    b.Navigation("Developer");

                    b.Navigation("Epic");

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("Model.Domain.ManagerVersion", b =>
                {
                    b.HasOne("Model.Domain.CardJira", "CardJira")
                        .WithMany()
                        .HasForeignKey("CardJiraId");

                    b.HasOne("Model.Domain.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("SolutionId");

                    b.Navigation("CardJira");

                    b.Navigation("Solution");
                });
#pragma warning restore 612, 618
        }
    }
}
